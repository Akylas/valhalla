Avoids

1. loki/worker::work()
2. ./worker::ParseAPI(): add avoid polygons to request PBF as ?, probably not checking on limitations to keep it generic and not avoid_polygon specific
3. then the different actions are being called, e.g. loki/route_action::route()
4. loki/worker::parse_costing: Sets the costing in the request PBF and also sets all the avoid edges as custom PBF objects. Here we'd have to include the Search function for avoid_polygons and also add AvoidEdges to PBF (both regular and shortcuts). Also check if not exceeding any limit (area, vertices).


Pseudocode intersection:

1. first pass: collect all 2. level tiles intersecting the polygons' bboxes
2. if it's intersecting, collect all bins of these tiles exactly intersecting the polygons' bboxes
3. then loop over all regular and shortcut edges
4. verify the edge/shortcut is relevant for this costing model
5. intersect the edge with the avoid polygon (if it's entirely in the avoid polygon, no need to calculate the percent_along, otherwise it's a tweener and will have to be looked at again to see if it's only partly covered..)
6. if it's in there, add it to PBF AvoidEdges with percent_along (which can be updated in case of "only" partly included edges)
